#include<numeric>

std::vector<int> xbonacci(std::vector<int> signature, int n) {
  size_t l = signature.size();
  
  if (static_cast<size_t>(n) < l) return std::vector(signature.cbegin(), signature.cbegin()+n);
  
  for (size_t i = 0; n-l>0; ++i, --n) signature.push_back(std::reduce(signature.cbegin()+i, signature.cend()));
  
  return signature;
}
